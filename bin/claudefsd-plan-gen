#!/bin/bash

set -e

# Check dependencies
$(dirname "$0")/check-dependencies.sh

mkdir -p logs

# Use a temporary directory for tmp files, as codex is sandboxed to this directory
mkdir -p tmp
export TMPDIR=tmp/

# look for a brief file
if [ ! -f BRIEF.md ]; then
    echo "No BRIEF.md file found, please create one first "
    exit 1
fi

LOGFILE="logs/claude-$(date +%Y%m%d_%H%M%S).txt"

echo -e "\033[32m==================================================================\033[0m"
echo -e "\033[32m== PROCESSING THE QUESTIONS IN QUESTIONS.md\033[0m"
echo -e "\033[32m==================================================================\033[0m"

    prompt2="
Read all of these documents if they exist:
- BRIEF.md -- the project brief
- docs/REQUIREMENTS.md -- the project requirements
- docs/PLAN.md -- the project plan
- docs/QUESTIONS.md -- the project questions
- docs/IDEAS.md -- the backlog of future ideas
- docs/WEBTESTS.md -- the project web tests
- README.md -- the project README

Your job, as a megathinking business analyst, project manager, architect and product manager, is to help solidify
the requirements and plan.

1. Read through these documents and pay particular attention to the questions and answers in QUESTIONS.md.
2. Update the docs/REQUIREMENTS.md and docs/PLAN.md documents to incorporate the full brief and all answers.
3. If the requirements and plan don't already exist, create them.

If the brief, questions or answers have been updated, the requirements and plan will need to be updated.

As part of this work, please consider our SDLC and what infrastructure will need to be established to ensure
the system is compliant. Make sure the basics like a git repo and a pre-commit hook that call a custom
linter are in the plan to be established if they don't exist now.
Also make sure our work is being done on a feature branch.
Other than that, DO NOT get distracted by infrastructure, stick with the YAGNI principle.
Just ensure the basic branching and linter is working and move on.
Focus on the user's brief and answers from docs/QUESTIONS.md, and the plan.
"

# run BA's
echo "Running claude..."
claude --dangerously-skip-permissions -p "$prompt2" | tee >(cat > $LOGFILE-ba3-$round)

# Only run codex if available
if command -v codex >/dev/null 2>&1; then
    echo "Running codex o3 (results won't display)..."
    codex -m o3 --full-auto -q "$prompt2" > $LOGFILE-ba4-$round
else
    echo "Codex not available, skipping o3 analysis" > $LOGFILE-ba4-$round
fi

echo -e "\033[32m==================================================================\033[0m"
echo -e "\033[32m== DONE\033[0m"
echo -e "\033[32m==================================================================\033[0m"
echo "You can now run claudefsd-dev to start the development process."
echo "Or do one more round of claudefsd-plan to cover more questions."



